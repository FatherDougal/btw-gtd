<Views:MvxPhonePage
    x:Class="Gtd.Client.WindowsPhone.Views.MakeStuffActionableView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Views="clr-namespace:Cirrious.MvvmCross.WindowsPhone.Views;assembly=Cirrious.MvvmCross.WindowsPhone"
    xmlns:valueConverters="clr-namespace:Gtd.Client.WindowsPhone.ValueConverters"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="True">

    <Views:MvxPhonePage.Resources>
        <valueConverters:NativeInverseBoolConverter x:Key="InverseBool"></valueConverters:NativeInverseBoolConverter>
        <valueConverters:NativeVisibilityConverter x:Key="Visibility"></valueConverters:NativeVisibilityConverter>
        <valueConverters:NativeInvertedVisibilityConverter x:Key="InvertedVisibility"></valueConverters:NativeInvertedVisibilityConverter>
    </Views:MvxPhonePage.Resources>


    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid x:Name="LayoutRoot" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--TitlePanel contains the name of the application and page title-->
        <StackPanel Grid.Row="0" Margin="12,17,0,28">
            <TextBlock Text="GTD-beingtheworst.com" Style="{StaticResource PhoneTextNormalStyle}" HorizontalAlignment="Right" />
            <TextBlock Text="{Binding ActionOutcome}" Margin="9,-7,0,0" Style="{StaticResource PhoneTextTitle1Style}"/>
        </StackPanel>

        <!--ContentPanel - place additional content here-->
        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0">
            <StackPanel>
                <TextBlock Text="Project/Outcome you committed to for this item?" />
                <CheckBox   Content="New Single-Action Project" IsChecked="{Binding IsSingleActionProject, Mode=TwoWay}"/>
                <phone:LongListSelector 
                    ItemsSource="{Binding ProjectList}"
                    IsEnabled="{Binding IsSingleActionProject, Converter={StaticResource InverseBool}}"
                    Visibility="{Binding IsSingleActionProject, Converter={StaticResource InvertedVisibility}}"
                    Height="124"
                    IsGroupingEnabled="False">
                    <phone:LongListSelector.ItemTemplate>
                        <DataTemplate>
                            <StackPanel VerticalAlignment="Top">
                                <!--<TextBlock Text="{Binding ProjectId}" />-->
                                <TextBlock Margin="10" FontSize="24" FontWeight="Bold"  Text="{Binding Outcome}" />
                            </StackPanel>
                        </DataTemplate>
                    </phone:LongListSelector.ItemTemplate>
                </phone:LongListSelector>
                <TextBlock Text="" />
                <TextBlock Text="Next physical/visible action to take on this is?" />
                <TextBlock Text="" />
                <TextBox Text="{Binding ActionOutcome, Mode=TwoWay}" Height="118" TextWrapping="Wrap"/>
                <!--<toolkit:ListPicker Margin="5,35,0,0" Width="450" FontSize="21" Grid.Row="1" Grid.Column="0"
                                            ItemsSource="{Binding MyList}" 
                                            DisplayMemberPath="Value"
                                            SelectedItem="{Binding MySelected, ItemMode=TwoWay}"/>-->
                <!--<TextBlock Text="{Binding Item.WhenUtc, Converter={StaticResource TimeAgo}}" TextWrapping="Wrap"></TextBlock>
                <TextBlock Text="{Binding Item, Converter={StaticResource ItemLocation}}" TextWrapping="Wrap"></TextBlock>
                <Image Height="250" Width="250" Source="{Binding Item.ImagePath, Converter={StaticResource FilePathToImage}}"></Image>
                <TextBlock Text="{Binding Item.Notes}" TextWrapping="Wrap"></TextBlock>-->
            </StackPanel>
        </Grid>
    </Grid>

    <!-- TODO: Bindable Application Bar using libraries out there? Cheat with Code-Behind for now-->
    <!-- TODO: In prod app may want a confirmation dialog presented prior to delete -->
    <Views:MvxPhonePage.ApplicationBar>
        <shell:ApplicationBar >
            <shell:ApplicationBar.Buttons>
                <shell:ApplicationBarIconButton IconUri="/Icons/appbar.folder.light.png" Text="new project" Click="AppBarNewProjectButton_OnClick"></shell:ApplicationBarIconButton>
                <shell:ApplicationBarIconButton IconUri="/Icons/appbar.delete.light.png" Text="trash it" Click="AppBarTrashItButton_OnClick"></shell:ApplicationBarIconButton>
            </shell:ApplicationBar.Buttons>
        </shell:ApplicationBar>
    </Views:MvxPhonePage.ApplicationBar>
</Views:MvxPhonePage>