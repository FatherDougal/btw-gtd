using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMember.Local
namespace Gtd
{
    #region Generated by Lokad Code DSL
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class TenantCreated : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        
        TenantCreated () {}
        public TenantCreated (TenantId id)
        {
            Id = id;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class CaptureThought : Command, ITenantCommand
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public Guid RequestId { get; private set; }
        [DataMember(Order = 3)] public string Thought { get; private set; }
        
        CaptureThought () {}
        public CaptureThought (TenantId id, Guid requestId, string thought)
        {
            Id = id;
            RequestId = requestId;
            Thought = thought;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ThoughtCaptured : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public Guid ThoughtId { get; private set; }
        [DataMember(Order = 3)] public string Thought { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        
        ThoughtCaptured () {}
        public ThoughtCaptured (TenantId id, Guid thoughtId, string thought, DateTime timeUtc)
        {
            Id = id;
            ThoughtId = thoughtId;
            Thought = thought;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ArchiveThought : Command, ITenantCommand
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public Guid ThoughtId { get; private set; }
        
        ArchiveThought () {}
        public ArchiveThought (TenantId id, Guid thoughtId)
        {
            Id = id;
            ThoughtId = thoughtId;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ThoughtArchived : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public Guid ThoughtId { get; private set; }
        [DataMember(Order = 3)] public DateTime TimeUtc { get; private set; }
        
        ThoughtArchived () {}
        public ThoughtArchived (TenantId id, Guid thoughtId, DateTime timeUtc)
        {
            Id = id;
            ThoughtId = thoughtId;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class DefineAction : Command, ITenantCommand
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public Guid RequestId { get; private set; }
        [DataMember(Order = 3)] public string ActionName { get; private set; }
        
        DefineAction () {}
        public DefineAction (TenantId id, Guid requestId, string actionName)
        {
            Id = id;
            RequestId = requestId;
            ActionName = actionName;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionDefined : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public string ActionName { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        
        ActionDefined () {}
        public ActionDefined (TenantId id, ActionId actionId, string actionName, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            ActionName = actionName;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class DefineProject : Command, ITenantCommand
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public Guid RequestId { get; private set; }
        [DataMember(Order = 3)] public string ProjectOutcome { get; private set; }
        
        DefineProject () {}
        public DefineProject (TenantId id, Guid requestId, string projectOutcome)
        {
            Id = id;
            RequestId = requestId;
            ProjectOutcome = projectOutcome;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ProjectDefined : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ProjectId ProjectId { get; private set; }
        [DataMember(Order = 3)] public string ProjectOutcome { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        
        ProjectDefined () {}
        public ProjectDefined (TenantId id, ProjectId projectId, string projectOutcome, DateTime timeUtc)
        {
            Id = id;
            ProjectId = projectId;
            ProjectOutcome = projectOutcome;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionAssignedToProject : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public ProjectId NewProject { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        
        ActionAssignedToProject () {}
        public ActionAssignedToProject (TenantId id, ActionId actionId, ProjectId newProject, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            NewProject = newProject;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionRemovedFromProject : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public ProjectId OldProject { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        
        ActionRemovedFromProject () {}
        public ActionRemovedFromProject (TenantId id, ActionId actionId, ProjectId oldProject, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            OldProject = oldProject;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionMovedToProject : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public ProjectId OldProject { get; private set; }
        [DataMember(Order = 4)] public ProjectId NewProject { get; private set; }
        [DataMember(Order = 5)] public DateTime TimeUtc { get; private set; }
        
        ActionMovedToProject () {}
        public ActionMovedToProject (TenantId id, ActionId actionId, ProjectId oldProject, ProjectId newProject, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            OldProject = oldProject;
            NewProject = newProject;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class RemoveAction : Command, ITenantCommand
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        
        RemoveAction () {}
        public RemoveAction (TenantId id, ActionId actionId)
        {
            Id = id;
            ActionId = actionId;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionRemoved : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public DateTime TimeUtc { get; private set; }
        
        ActionRemoved () {}
        public ActionRemoved (TenantId id, ActionId actionId, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionRenamed : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public string Name { get; private set; }
        [DataMember(Order = 4)] public DateTime TimeUtc { get; private set; }
        
        ActionRenamed () {}
        public ActionRenamed (TenantId id, ActionId actionId, string name, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            Name = name;
            TimeUtc = timeUtc;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class CompleteAction : Command, ITenantCommand
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        
        CompleteAction () {}
        public CompleteAction (TenantId id, ActionId actionId)
        {
            Id = id;
            ActionId = actionId;
        }
    }
    [DataContract(Namespace = "BTW2/GTD")]
    public partial class ActionCompleted : Event, ITenantEvent
    {
        [DataMember(Order = 1)] public TenantId Id { get; private set; }
        [DataMember(Order = 2)] public ActionId ActionId { get; private set; }
        [DataMember(Order = 3)] public DateTime TimeUtc { get; private set; }
        
        ActionCompleted () {}
        public ActionCompleted (TenantId id, ActionId actionId, DateTime timeUtc)
        {
            Id = id;
            ActionId = actionId;
            TimeUtc = timeUtc;
        }
    }
    
    public interface ITenantApplicationService
    {
        void When(CaptureThought c);
        void When(ArchiveThought c);
        void When(DefineAction c);
        void When(DefineProject c);
        void When(RemoveAction c);
        void When(CompleteAction c);
    }
    
    public interface ITenantState
    {
        void When(TenantCreated e);
        void When(ThoughtCaptured e);
        void When(ThoughtArchived e);
        void When(ActionDefined e);
        void When(ProjectDefined e);
        void When(ActionAssignedToProject e);
        void When(ActionRemovedFromProject e);
        void When(ActionMovedToProject e);
        void When(ActionRemoved e);
        void When(ActionRenamed e);
        void When(ActionCompleted e);
    }
    #endregion
}
